{
    "init":{
        "info_help_short":"检测并初始化SmartIDE工作区配置信息",
        "info_help_long":"检测并初始化SmartIDE工作区配置信息",
        "info_exist_template":"当前目录已经完成初始化，无须再次进行！",
        "info_choose_template":"请选择模板类型，输入序号：",
        "info_choose_idetype":"请选择IDE类型，输入序号：",
        "info_available_templates":"可供选择的模板如下：",
        "info_available_ides":"可供选择的IDE如下："
    },
    "config": {
        "info_help_short": "设置SmartIDE配置信息",
        "info_help_long": "设置SmartIDE配置信息",
        "info_set_config_success": "参数设置成功",
        "err_read_config": "获取配置文件错误",
        "err_set_config": "参数设置异常",
        "info_read_docker_compose": "读取 docker-compose 文件：%v",
        "err_services_not_exit": "配置文件中不存在 services 节点 ",
        "err_file_not_exit": "%v 配置文件不存在",
        "err_devcontainer_not_contains": "dev-container 节点中定义的 “%s” 未出现在 services",
        "err_gitconfig_not_exit": "未获取到用户本地的GitConfig配置信息",
        "err_config_orchestrator_type_none": "[配置文件] 编排类型（Orchestrator.Type）不能为空！",
        "err_config_orchestrator_type_valid": "[配置文件] 目前编排类型（Orchestrator.Type）仅支持docker-compose、k8s，其他格式正在开发中，敬请等待！",
        "err_config_orchestrator_version_none": "[配置文件] %v 对应的版本（Orchestrator.Version）不能为空！",
        "err_config_devcontainer_servicename_none": "[配置文件] 工作区开发容器服务名 （Workspace.DevContainer.ServiceName）不能为空！",
        "err_config_devcontainer_services_not_exit": "[配置文件] Workspace.Servcies 中不包含 “%v”！",
        "err_config_devcontainer_idetype_none": "[配置文件] 工作区开发容器WebIDE 类型（Workspace.DevContainer.IdeType） 不能为空！",
        "err_config_devcontainer_idetype_valid": "[配置文件] 目前WebIDE类型仅支持 vscode、theia、jb-projector、opensumi、sdk-only，其他类型的webide正在适配中，敬请等待！",
        "err_config_devcontainer_ports_port_reqeat": "[配置文件] 工作区端口描述信息中，端口 “%v” 重复",
        "err_config_devcontainer_ports_label_reqeat": "[配置文件] 工作区端口描述信息中，端口描述 “%v” 重复"
    },
    "main": {
        "info_help_short": "SmartIDE - 开发从未如此简单！",
        "info_help_long": "SmartIDE - 开发从未如此简单！\n- SmartIDE 可以帮助开发人员快速搭建开发环境，包括本地以及云端环境。",
        "info_usage_template": "使用:{{if .Runnable}}\n  {{.UseLine}}{{end}}{{if .HasAvailableSubCommands}}\n  {{.CommandPath}} [command]{{end}}{{if gt (len .Aliases) 0}}\nAliases:\n  {{.NameAndAliases}}{{end}}{{if .HasExample}}\n示例:\n{{.Example}}{{end}}{{if .HasAvailableSubCommands}}\n命令:{{range .Commands}}{{if (or .IsAvailableCommand (eq .Name \"help\"))}}\n  {{rpad .Name .NamePadding }} {{.Short}}{{end}}{{end}}{{end}}{{if .HasAvailableLocalFlags}}\n标记:\n{{.LocalFlags.FlagUsages | trimTrailingWhitespaces}}{{end}}{{if .HasAvailableInheritedFlags}}\nGlobal Flags:\n{{.InheritedFlags.FlagUsages | trimTrailingWhitespaces}}{{end}}{{if .HasHelpSubCommands}}\nAdditional help topics:{{range .Commands}}{{if .IsAdditionalHelpTopicCommand}}\n  {{rpad .CommandPath .CommandPathPadding}} {{.Short}}{{end}}{{end}}{{end}}{{if .HasAvailableSubCommands}}\n使用 \"{{.CommandPath}} [command] --help\" 可以看到命令的详细帮助信息.{{end}}\n",
        "info_help_flag_debug": "是否开启Debug模式，在该模式下将显示更多的日志信息",
        "info_help_flag_mode": "smartide 的运行模式，是在服务端（server）还是客户端（client）或者流水线模式（pipeline）",
        "info_help_flag_server_workspace_id": "smartide server工作区ID",
        "info_help_flag_server_token": "smartide server的token",
        "info_help_flag_server_username": "smartide server登录账号",
        "info_help_flag_server_userguid": "smartide server登录账号对应的guid",
        "info_help_flag_server_feedback": "smartide server反馈信息的url",
        "info_help_flag_server_host": "smartide server 的访问地址",
        
        "info_workspace_loading": "读取工作区信息 ...",
        "info_ssh_connect_check": "检查ssh连接是否正常 %v:%v ...",
        "info_version_local": "本地构建版本 - %v",
        "err_file_not_exit": "配置文件不存在，请创建 SmartIDE 配置文件 “.ide/.ide.yaml” ！",
        "err_file_not_exit2": "配置文件 '（%v）' 不存在！",
        "err_version_not_build": "请通过流水线生成版本号！",
        "err_flag_value_invalid": "'%v' 已设置，当前参数 '%v' 无效",
        "err_flag_value_invalid2": "当前目录下不需要录入 'WorkspaceId'",
        "err_flag_value_required": "'%v' 参数是必填项",
        "err_workspace_none": "查找不到对应的 Workspace 信息",
        "err_workspace_mode_none": "[Workspace] 模式不能为空",
        "err_workspace_config_filepath_none": "[Workspace] 配置文件路径不能为空",
        "err_workspace_workingdir_none": "[Workspace] 工作目录不能为空",
        "err_workspace_giturl_valid": "[Workspace] 当前（%v）不是有效的git url",
        "err_workspace_property_urlandworkingdir_none": "在本地模式下，git 库对应url 及 当前工作目录路径，不能同时为空！",
        "err_workspace_version_old": "当前工作区为旧版本cli，请运行smartide start %v",
        "err_env_docker": "请检查当前环境是否安装了 Docker",
        "err_env_dockerps": "请检查当前环境的 Docker 是否正在运行",
        "err_env_docker_compose": "请检查当前环境 Docker-Compose 是否正常运行",
        "err_env_git_check": "请检查当前环境的 git 是否正常",
        "err_git_clone_folder_exist": "[Git] 文件夹 '%v' 已存在, 无法执行Git代码仓库克隆操作. 请选择其他工作目录或预先删除此文件夹."
    },
    "start": {
        "info_help_short": "快速创建并启动SmartIDE开发环境",
        "info_help_long": "快速创建并启动SmartIDE开发环境",
        "info_start": "SmartIDE启动中 ...",
        "info_help_flag_host": "可以指定 host 的 IP地址、域名，或者 hostId",
        "info_help_flag_callback_api_address": "可以设置工作区创建完成后的回调接口地址",
        "info_help_flag_k8s": "可以指定 k8s 的 context",
        "info_help_flag_k8s_namespace": "可以指定 k8s 的 info_help_flag_namespace",
        "info_help_flag_ownerguid": "可以指定 ownerguid",
        "info_k8s_init": "初始化环境，包括k8s 配置文件校验、.ide.yaml 文件获取...",
        "info_k8s_inited": "环境初始化结束...",
        "info_k8s_creating": "k8s deployment 创建中... ",
        "info_k8s_created": "k8s deployment 创建结束... ",
        "info_k8s_updating": "k8s deployment 更新中... ",
        "info_k8s_updated": "k8s deployment 更新结束... ",
        "Info_k8s_port_forward_start": "[%v]  k8s 端口转发开始... ",
        "Info_k8s_port_forward_end": "k8s 端口转发结束... ",
        "info_help_flag_port": "SSH 端口，默认为22",
        "info_help_flag_username": "SSH 登录用户名",
        "info_help_flag_pasword": "SSH 登录用户密码",
        "info_help_flag_repourl": "Git代码仓库的克隆地址 (http/https/SSH)",
        "info_help_flag_branch": "指定Git分支",
        "info_help_flag_filepath": "请指定yaml文件路径",
        "info_running_container": "[Docker] 容器创建中 ...",
        "info_running_openbrower": "[WebIDE] 打开浏览器 ...",
        "info_end": "[WebIDE] SmartIDE启动完毕.",
        "info_docker_compose_filepath": "[Docker-Compose] 加载配置文件: %v",
        "info_ssh_tunnel": "[SSH] 转发端口：%v",
        "info_create_network": "[Docker] 创建网络 %v",
        "info_workspace_saving": "[Workspace] 保存工作区(Workspace)信息 ...",
        "info_pipeline_mode_success": "已使用流水线模式完成环境启动，您可以使用以下地址进行开发调试",
        "info_workspace_saved": "[Workspace] 保存成功，可以通过 WorkspaceId（smartide start %v）直接再次启动此工作区。",
        "info_workspace_record_load": "从工作区（%v）中读取数据",
        "info_workspace_changed": "工作区配置改变！",
        "info_workspace_create": "新增工作区！",
        "info_git_clone": "[Git] 克隆代码库 ...",
        "err_docker_compose_save": "在临时文件夹中保存 Docker-Compose 文件出错 : ",
        "warn_docker_container_started": "容器已经启动！",
        "warn_docker_container_getnone": "没有获取到容器列表！"
    },
    "list": {
        "info_help_short": "获取已保存的工作区(Workspace)列表",
        "info_help_long": "获取已保存的工作区(Workspace)列表",
        "info_start": "查询中 ...",
        "info_end": "查询结束",
        "info_dal_none": "没有查询到工作区(Workspace)数据！",
        "info_workspace_list_header": "Id\tName\tMode\tWorking Dir\tConfig File\tHost\tCreate Time"
    },
    "get": {
        "info_help_short": "获取工作区(Workspace)详情",
        "info_help_long": "获取工作区(Workspace)详情",
        "info_help_flag_workspaceid": "使用此Id直接启动 SmartIDE 环境 (smartide start <id>)",
        "info_help_flag_all": "显示全部的信息",
        "info_workspace_detail_template": "工作区信息\nId:\t%v\n名称：\t%v\n运行环境:\t%v\n模式：\t%v\n配置文件：\t%v\n工作目录：\t%v\nGit库地址：\t%v\nGit库验证方式：\t%v\n",
        "info_workspace_host_detail_template": "远程主机信息\n主机ID:\t%v\n地址：\t%v\n验证模式：\t%v\n",
        "Warn_flag_workspaceid_none": "参数 workspaceId 为空！"
    },
    "stop": {
        "info_help_short": "停止SmartIDE开发环境",
        "info_help_long": "停止SmartIDE开发环境",
        "info_start": "SmartIDE停止中 ...",
        "info_end": "SmartIDE已停止",
        "info_help_flag_filepath": "指定yaml文件路径",
        "info_sshremote_connection_creating": "创建远程连接... ",
        "info_docker_stopping": "停止容器... ",
        "err_env_project_dir_remove": "远程主机上项目文件夹被删除，当前命令执行失败，请运行 smartide remove %v -y"
    },
    "remove": {
        "info_help_short": "删除SmartIDE工作区",
        "info_help_long": "删除SmartIDE工作区",
        "info_flag_workspaceid": "使用此Id指定需要删除的工作区",
        "info_flag_yes": "不出现删除提示",
        "info_flag_force": "强制删除",
        "info_flag_workspace": "仅删除本地的工作区，不涉及远程主机上的容器 和 文件夹",
        "info_flag_container": "仅删除远程主机上的容器，不涉及本地的工作区信息",
        "info_flag_image": "删除compose文件关联的所有的镜像",
        "info_flag_project": "删除远程主机上的项目工作目录",
        "info_start": "SmartIDE工作区删除中 ...",
        "info_end": "SmartIDE工作区删除完毕",
        "info_is_confirm_remove": "是否确认删除？（y｜n）",
        "info_sshremote_connection_creating": "创建远程连接... ",
        "info_docker_removing": "删除容器 ... ",
        "info_project_dir_removing": "删除项目文件夹... ",
        "info_workspace_removing": "删除工作区数据...",
        "info_docker_rmi_removing": "删除镜像... ",
        "info_docker_rmi_image_removed": "镜像 %v 已经删除！",
        "info_project_dir_removed": "文件夹 %v 已删除",
        "info_ssh_timeout_confirm_skip": "ssh 连接连接超时，是否跳过在远程主机上的操作（删除容器、文件夹、镜像等等）？（y｜n）",
        "warn_workspace_dir_not_exit": "本地工作目录已经被删除！",
        "err_flag_workspace_container": "参数 workspace 和 container 不能同时存在！",
        "err_workspace_not_exit": "当前目录没有对应的工作区信息！",
        "err_flag_container_valid": "在远程主机模式下，container 参数无效！",
        "err_workspace_dir_not_exit": "本地工作目录已经被删除！可通过 smartide remove -y -f 强制删除本地工作区数据。"
    },
    "new": {
        "info_help_short": "新建SmartIDE工作区",
        "info_help_long": "新建SmartIDE工作区",
        "info_help_info": "SmartIDE工作区模板",
        "info_help_info_operation": "选项：",
        "info_help_flag_type": "类型",
        "info_help_flag_projectFolder": "输出文件夹",
        "info_yaml_exist": "当前文件夹中已经存在 .ide.yaml 文件",
        "info_noempty_is_comfirm": "当前文件夹不为空，是否继续创建（y/n）？当前文件夹内数据将被重置。",
        "info_type_no_exist": "模版不存在",
        "info_creating_project": "正在初始化项目 ...",
        "info_loading_templates": "正在获取模板 ...",
        "info_templates_list_header": "TemplateType\tTypeName",
        "err_read_templates": "获取模板错误"
    },
    "help": {
        "info_help_short": "输出 SmartIDE 帮助信息",
        "info_help_long": "使用此命令获取帮助信息"
    },
    "connect": {
        "info_help_short": "连接远程工作区，自动转发端口",
        "info_help_long": "连接远程工作区，自动转发端口"
    },
    "version": {
        "info_help_short": "查看版本信息",
        "info_help_long": "查看版本信息",
        "info_template": "版本号: %v\n操作系统: %v\n构建号: %v\n编译时间: %v\n提交记录: %v\n发行商: %v"
    },
    "vm_start": {
        "info_starting": "远程主机模式启动中 ...",
        "info_connect_remote": "连接远程主机 ",
        "info_git_clone": "[Git] 克隆代码库 ...",
        "info_git_checkout_and_pull": "执行 git checkout && git pull ",
        "info_read_config": "读取代码库下的配置文件 '%v' ...",
        "info_create_network": "[Docker] 创建网络 ...",
        "info_compose_up": "[Docker-Compose] 运行 docker-compose up ...",
        "info_warting_for_webide": "[WebIDE] 等待 WebIDE 启动 ...",
        "info_open_brower": "[WebIDE] 打开浏览器访问WebIDE : %v ",
        "info_git_cloned": "[Git]当前工作区中已经完成代码克隆，不再执行 git checkout。",
        "info_tunnel_waiting": "端口转发中...",
        "info_callback_msg": "已将工作区相关信息发送至以下接口: %v"
    },
    "update": {
        "info_help_short": "自动升级 或者 更新到指定的版本",
        "info_help_long": "自动升级 或者 更新到指定的版本",
        "info_remove_repeat": "本地删除重复文件",
        "info_help_flag_version": "更新到指定的版本",
        "info_help_flag_build": "是否更新build版本",
        "warn_rel_lastest": "当前版本 %v 无须升级"
    },
    "host": {
        "info_help_short": "远程主机信息",
        "info_help_long": "远程主机信息",
        "info_help_get_short": "获取远程主机详情",
        "info_help_get_long": "获取远程主机详情",
        "info_help_list_short": "获取远程主机列表",
        "info_help_list_long": "获取远程主机列表",
        "info_help_flag_hostid": "远程主机Id",
        "info_host_table_header": "Id\tHost\tPort\tCreate Time",
        "info_host_detail_template": "      Id：\t%v\n地    址：\t%v\n验证模式：\t%v\n用    户：\t%v\n创建时间：\t%v\n",
        "err_host_data_not_exit": "没有查找到对应的远程主机信息",
        "info_help_host_add_short": "新增远程主机",
        "info_help_host_add_long": "新增远程主机",
        "info_help_host_remove_short": "删除远程主机",
        "info_help_host_remove_long": "删除远程主机",
        "err_host_add_addr_required": "远程主机地址不能为空!",
        "err_host_add_username_required": "远程主机用户名不能为空!",
        "info_host_add_success": "远程主机 %v 添加/更新成功, host id为 %v!",
        "add_start": "开始新增远程主机 ...",
        "remove_start": "开始删除远程主机 ...",
        "info_host_remove_success": "远程主机 %v 删除成功."
    },
    "common": {
        "debug_key_public": "本地公钥: ",
        "debug_same_not_overwrite": "SSH 私钥相同，不需要覆盖！",
        "debug_auto_connect_gitrepo": "自动确定连接 Git 库",
        "debug_empty_error": "SSH 执行 command 遇到空错误(error、output均为空)，已跳过！",
        "info_privatekey_is_overwrite": "SSH 私钥文件已存在，是否覆盖？[y|n]",
        "info_whether_overwrite": "当前指定使用 SSH Git Url 方式，SmartIDE可以将本地 SSH Key 复制到远程主机以便简化操作，是否复制？[y|n]",
        "info_gitrepo_cloned": "Git库已克隆！",
        "info_gitrepo_clone_done": "[Git] Git 代码库克隆完成。",
        "info_please_enter_password": "请输入当前 Git 库的访问密码: ",
        "info_canel_privatekey_password": "当前指定使用 SSH Git Url 方式，请录入 SSH 私钥密码：",
        "info_ssh_rsa_cancel_pwd_successed": "当前指定使用 SSH Git Url 方式，私钥免密成功！",
        "info_port_is_binding": "[端口转发] 端口 %v 已绑定，可以直接使用",
        "info_port_binding_result2": "[端口转发] localhost:%v( %v 被占用) -> 容器: %v  ",
        "info_port_binding_result": "[端口转发] localhost:%v -> 容器: %v  ",
        "info_find_new_port": "[端口转发] 发现新端口：",
        "info_ssh_webide_host_port": " WebIDE 容器绑定端口：%v",
        "info_ssh_host_port": "SSH 容器绑定端口：%v",
        "info_temp_create_directory": "创建临时目录(.temp)，请在 Git 中忽略此目录：%v",
        "info_temp_created_docker_compose": "在临时目录中写入 docker-compose 文件：%v",
        "info_temp_created_config": "在临时目录中写入 SmartIDE 配置文件：%v",
        "info_table_header_containers": "Service\tState\tImage\tPorts\t",
        "err_sshremote_param_repourl_none": "参数 repourl 不能为空",
        "err_password_none": "密码不能为空！",
        "err_dal_record_repeat": "工作区(Workspace)数据重复",
        "err_dal_update_fail": "工作区(Workspace)更新失败",
        "err_dal_update_count_too_much": "工作区(Workspace)更新条目 > 1",
        "err_ernum_error": "在枚举中找不到对应的值",
        "err_ssh_password_required": "密码不能为空！",
        "err_ssh_dial_none": "需要和远程主机创建连接！",
        "err_dal_remote_reference_by_workspace":"当前host已经被其他工作区引用，不能被删除！",
        "warn_dal_record_not_exit_condition": "根据（%v）没有查询到对应的数据",
        "warn_dal_record_not_exit": "没有查询到对应的数据",
        "warn_param_is_null": "参数 %v 为空"
    },
    "reset": {
        "info_help_short": "重置工作区",
        "info_help_long": "重置工作区，将删除工作区关联的本地 或者 远程主机 对应的容器，如果添加参数可以进一步删除镜像、工作目录",
        "Info_start": "重置工作区 开始",
        "info_end": "重置工作区 结束",
        "info_workspace_remove_all": "删除全部工作区对应的配置",
        "info_workspace_removing": "工作区（%v）删除中 ... ",
        "info_db_remove": "删除本地缓存数据 %v",
        "info_template_remove": "删除本地模板 %v",
        "info_config_remove": "删除配置文件 %v",
        "info_help_flag_yes": "不显示确认信息",
        "info_help_flag_image": "删除工作区对应的镜像",
        "info_help_flag_floder": "删除工作区的对应的工作目录",
        "info_help_flag_all": "删除工作区对应的镜像、工作目录",
        "warn_confirm_all_remove": "重置后当前所有工作区将无法恢复，是否确认重置当前环境？（y｜n）"
    },
    "login": {
        "info_help_short": "SmartIDE 登录 ",
        "info_help_long": "SmartIDE 登录 ",
        "info_help_login_success": "SmartIDE 登录成功",
        "info_help_login_fail": "SmartIDE 登录失败",
        "info_help_flag_username": "SmartIDE server 登录用户",
        "info_help_flag_pasword": "SmartIDE server 登录密码",
        "info_help_flag_loginurl": "SmartIDE server 登录地址"
    },
    "k8s": {
        "info_start": "工作区公共访问地址设置开始...",
        "info_help_short": "工作区公共访问地址设置",
        "info_help_long": "工作区公共访问地址设置",
        "info_help_flag_workspaceid": "使用此Id指定需要操作的工作区",
        "info_help_flag_publicurl": "开启或关闭公共访问地址",
        "info_help_flag_mode": "运行模式",
        "info_help_flag_serverhost": "SmartIDE 服务地址",
        "info_help_flag_servertoken": "SmartIDE 服务密钥",
        "info_log_get_workspace_start":"开始获取工作区信息...",
        "info_log_get_workspace_success":"获取工作区信息成功！",
        "info_log_disable_publicurl_start":"开始关闭公共访问地址...",
        "info_log_disable_publicurl_success":"关闭公共访问地址成功！",
        "info_log_create_basic_secret_start":"开始创建Basic认证密钥...",
        "info_log_create_basic_secret_success":"创建Basic认证密钥成功！",
        "info_log_save_temp_yaml_start":"开始保存部署临时文件...",
        "info_log_save_temp_yaml_success":"保存部署临时文件成功！",
        "info_log_enable_publicurl_start":"开始开启公共访问地址...",
        "info_log_enable_publicurl_success":"开启公共访问地址成功！"
    },
    "applyssh": {
        "info_start": "工作区服务 SSH 端口设置开始",
        "info_help_short": "工作区服务 SSH 端口设置",
        "info_help_long": "工作区服务 SSH 端口设置",
        "Info_help_flag_resourceid": "K8s 资源ID",
        "Info_help_flag_ports": "SSH 端口全集",
        "info_help_flag_mode": "运行模式",
        "info_help_flag_serverhost": "SmartIDE 服务地址",
        "info_help_flag_servertoken": "SmartIDE 服务密钥",
        "info_log_enable_ssh_start" : "开始设置 SSH 端口...",
        "info_log_enable_ssh_success" : "设置 SSH 端口成功！",
        "info_log_service_enable_ssh_success" : "工作区 %v 服务 %v 开启 SSH 端口成功, 使用端口为 %v!",
        "info_log_service_disable_ssh_success" : "工作区 %v 服务 %v 关闭 SSH 端口成功, 释放端口 %v!"
    }
}